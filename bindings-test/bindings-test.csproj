<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net6.0</TargetFramework>
    <RootNamespace>bindings_test</RootNamespace>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <Platforms>x64</Platforms>
	<TreeSitterDllOutputDir>$(SolutionDir)out\libtree-sitter\$(Platform)\$(Configuration)\</TreeSitterDllOutputDir>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\tree-sitter-bindings\tree-sitter-bindings.csproj" />
  </ItemGroup>

  <!--These linked files should copy into the output directory when building.-->
  <ItemGroup>
	  <Content Include="$(TreeSitterDllOutputDir)tree_sitter.dll" Link="tree_sitter.dll">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
	  </Content>
    <Content Include="$(TreeSitterDllOutputDir)tree_sitter.exp" Link="tree_sitter.exp">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="$(TreeSitterDllOutputDir)tree_sitter.lib" Link="tree_sitter.lib">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
    <Content Include="$(TreeSitterDllOutputDir)tree_sitter.pdb" Link="tree_sitter.pdb">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </Content>
  </ItemGroup>

<!-- Old way of making sure the native dll's get put into the output directory -->
<!--<ItemGroup>
	<_LibTreeSitterBinaries Include="$(TreeSitterDllOutputDir)\*.*" />
</ItemGroup>
<Target Name="PostBuild" AfterTargets="PostBuildEvent">
	<Copy SourceFiles="@(MySourceFiles)" DestinationFolder="c:\MyProject\Destination" />
	<Message Text="Copying libtree-sitter Binaries from $(TreeSitterDllOutputDir) to bindings-test output directory $(ProjectDir)$(OutDir)" Importance="high" />
	<Copy SourceFiles="@(_LibTreeSitterBinaries)" DestinationFolder="$(ProjectDir)$(OutDir)" />
</Target>-->

</Project>
